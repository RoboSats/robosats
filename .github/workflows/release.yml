
name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  check-versions:
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.validate.outputs.semver }}
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v3
    - name: 'Validate versions match (tag, backend, frontend, Android)'
      id: validate
      shell: bash
      run: |
        semver=$(git describe --tags --abbrev=0)
        IFS=-
        read -ra semverArray <<< $semver
        tagV=$(echo ${semverArray[0]} | sed 's/v//')
        clientV=$(jq -r .version frontend/package.json)
        androidV=$(grep -oP '(?<=versionName ").*?((?=\-)|$)' mobile/android/app/build.gradle)
        coordinatorV=$(jq -r .major version.json).$(jq -r .minor version.json).$(jq -r .patch version.json)

        printf "Client version: ${clientV}\nCoordinator version: ${coordinatorV}\nGit tag version: ${tagV}\n"

        if [ "$coordinatorV" = "$clientV" ] && [ "$coordinatorV" = "$tagV" ] && [ "$coordinatorV" = "$androidV" ]; then
            echo "Versions match!"
            echo '::set-output name=semver::'$semver
        else
            echo "Versions do not match! You might have forgotten to update the version on a component."; exit $ERRCODE;
        fi


  django-test:
    uses: reckless-satoshi/robosats/.github/workflows/django-test.yml@main
    needs: check-versions

  frontend-build:
    uses: reckless-satoshi/robosats/.github/workflows/frontend-build.yml@main
    needs: check-versions
    with:
      semver: ${{ needs.check-versions.outputs.semver }}

  coordinator-image:
    uses: reckless-satoshi/robosats/.github/workflows/coordinator-image.yml@main
    needs: [django-test, frontend-build]
    secrets: inherit
    with:
      semver: ${{ needs.check-versions.outputs.semver }}

  client-image:
    uses: reckless-satoshi/robosats/.github/workflows/client-image.yml@main
    needs: frontend-build
    secrets: inherit
    with:
      semver: ${{ needs.check-versions.outputs.semver }}

  android-build:
    uses: reckless-satoshi/robosats/.github/workflows/android-build.yml@main
    needs: [frontend-build, check-versions]
    with:
      semver: ${{ needs.check-versions.outputs.semver }}

  release:
    needs: [check-versions, coordinator-image, client-image, android-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Generate Release Changelog"
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}

      # Upload app-universal-release APK artifact asset
      - name: 'Download universal APK Artifact'
        uses: actions/download-artifact@v3
        with:
          name: robosats-${{ needs.check-versions.outputs.semver }}-universal.apk
          path: .
      - name: 'Upload universal APK Asset'
        id: upload-universal-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: app-universal-release.apk
          asset_name: robosats-${{ needs.check-versions.outputs.semver }}-universal.apk
          asset_content_type: application/apk

      # Upload app-arm64-v8a-release APK artifact asset
      - name: 'Download arm64-v8a APK Artifact'
        uses: actions/download-artifact@v3
        with:
          name: robosats-${{ needs.check-versions.outputs.semver }}-arm64-v8a.apk
          path: .
      - name: 'Upload arm64-v8a APK Asset'
        id: upload-arm64-v8a-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: app-arm64-v8a-release.apk
          asset_name: robosats-${{ needs.check-versions.outputs.semver }}-arm64-v8a.apk
          asset_content_type: application/apk

      # Upload app-armeabi-v7a-release APK artifact asset
      - name: 'Download armeabi-v7a APK Artifact'
        uses: actions/download-artifact@v3
        with:
          name: robosats-${{ needs.check-versions.outputs.semver }}-armeabi-v7a.apk
          path: .
      - name: 'Upload armeabi-v7a APK Asset'
        id: upload-armeabi-v7a-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: app-armeabi-v7a-release.apk
          asset_name: robosats-${{ needs.check-versions.outputs.semver }}-armeabi-v7a.apk
          asset_content_type: application/apk

      # Upload app-x86_64-release APK artifact asset
      - name: 'Download x86_64 APK Artifact'
        uses: actions/download-artifact@v3
        with:
          name: robosats-${{ needs.check-versions.outputs.semver }}-x86_64.apk
          path: .
      - name: 'Upload x86_64 APK Asset'
        id: upload-x86_64-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: app-x86_64-release.apk
          asset_name: robosats-${{ needs.check-versions.outputs.semver }}-x86_64.apk
          asset_content_type: application/apk

      # Upload app-x86-release APK artifact asset
      - name: 'Download x86 APK Artifact'
        uses: actions/download-artifact@v3
        with:
          name: robosats-${{ needs.check-versions.outputs.semver }}-x86.apk
          path: .
      - name: 'Upload x86 APK Asset'
        id: upload-x86-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: app-x86-release.apk
          asset_name: robosats-${{ needs.check-versions.outputs.semver }}-x86.apk
          asset_content_type: application/apk